{"version":"3.0.0","preview":{"api":"https://api.nuxt.studio","iframeMessagingAllowedOrigins":""},"gitInfo":{"name":"xyz","owner":"marr","url":"https://github.com/marr/xyz"},"database":{"type":"sqlite","filename":"./contents.sqlite"},"collections":{"content":{"name":"content","pascalName":"Content","tableName":"_content_content","source":[{"_resolved":true,"prefix":"/","include":"**","cwd":"/home/runner/work/xyz/xyz/content"}],"type":"page","fields":{"id":"string","stem":"string","extension":"string","meta":"json","path":"string","title":"string","description":"string","seo":"json","body":"json","navigation":"json"},"schema":{"$ref":"#/definitions/content","definitions":{"content":{"type":"object","properties":{"id":{"type":"string"},"stem":{"type":"string"},"extension":{"type":"string","enum":["md","yaml","yml","json","csv","xml"]},"meta":{"type":"object","additionalProperties":{}},"path":{"type":"string"},"title":{"type":"string"},"description":{"type":"string"},"seo":{"allOf":[{"type":"object","properties":{"title":{"type":"string"},"description":{"type":"string"}}},{"type":"object","additionalProperties":{}}],"default":{}},"body":{"type":"object","properties":{"type":{"type":"string"},"children":{},"toc":{}},"required":["type"],"additionalProperties":false},"navigation":{"anyOf":[{"type":"boolean"},{"type":"object","properties":{"title":{"type":"string"},"description":{"type":"string"},"icon":{"type":"string"}},"required":["title","description","icon"],"additionalProperties":false}],"default":true}},"required":["id","stem","extension","meta","path","title","description","body"],"additionalProperties":false}},"$schema":"http://json-schema.org/draft-07/schema#"},"tableDefinition":"CREATE TABLE IF NOT EXISTS _content_content (id TEXT PRIMARY KEY, \"title\" VARCHAR, \"body\" TEXT, \"description\" VARCHAR, \"extension\" VARCHAR, \"meta\" TEXT, \"navigation\" TEXT DEFAULT true, \"path\" VARCHAR, \"seo\" TEXT DEFAULT '{}', \"stem\" VARCHAR);"},"info":{"name":"info","pascalName":"Info","tableName":"_content_info","type":"data","fields":{},"schema":{"$ref":"#/definitions/info","definitions":{"info":{"type":"object","properties":{"id":{"type":"string"},"version":{"type":"string"}},"required":["id","version"],"additionalProperties":false}},"$schema":"http://json-schema.org/draft-07/schema#"},"tableDefinition":"CREATE TABLE IF NOT EXISTS _content_info (id TEXT PRIMARY KEY, \"version\" VARCHAR);"}},"appConfigSchema":{},"appConfig":{"nuxt":{}},"components":[{"name":"Alert","path":"app/components/ui/alert/Alert.vue","meta":{"props":[{"name":"variant","global":false,"description":"","tags":[],"required":false,"type":"\"default\" | \"destructive\" | null | undefined","schema":{"kind":"enum","type":"\"default\" | \"destructive\" | null | undefined","schema":{"0":"undefined","1":"null","2":"\"default\"","3":"\"destructive\""}}}],"slots":[{"name":"default","type":"{}","description":"","schema":{"kind":"object","type":"{}","schema":{}}}],"events":[]}},{"name":"AlertDescription","path":"app/components/ui/alert/AlertDescription.vue","meta":{"props":[],"slots":[{"name":"default","type":"{}","description":"","schema":{"kind":"object","type":"{}","schema":{}}}],"events":[]}},{"name":"AlertTitle","path":"app/components/ui/alert/AlertTitle.vue","meta":{"props":[],"slots":[{"name":"default","type":"{}","description":"","schema":{"kind":"object","type":"{}","schema":{}}}],"events":[]}},{"name":"Button","path":"app/components/ui/button/Button.vue","meta":{"props":[{"name":"variant","global":false,"description":"","tags":[],"required":false,"type":"\"default\" | \"destructive\" | \"outline\" | \"secondary\" | \"ghost\" | \"link\" | null | undefined","schema":{"kind":"enum","type":"\"default\" | \"destructive\" | \"outline\" | \"secondary\" | \"ghost\" | \"link\" | null | undefined","schema":{"0":"undefined","1":"null","2":"\"default\"","3":"\"destructive\"","4":"\"outline\"","5":"\"secondary\"","6":"\"ghost\"","7":"\"link\""}}},{"name":"size","global":false,"description":"","tags":[],"required":false,"type":"\"default\" | \"xs\" | \"sm\" | \"lg\" | \"icon\" | null | undefined","schema":{"kind":"enum","type":"\"default\" | \"xs\" | \"sm\" | \"lg\" | \"icon\" | null | undefined","schema":{"0":"undefined","1":"null","2":"\"default\"","3":"\"xs\"","4":"\"sm\"","5":"\"lg\"","6":"\"icon\""}}},{"name":"asChild","global":false,"description":"Change the default rendered element for the one passed as a child, merging their props and behavior.\n\nRead our [Composition](https://www.radix-vue.com/guides/composition.html) guide for more details.","tags":[],"required":false,"type":"boolean | undefined","schema":{"kind":"enum","type":"boolean | undefined","schema":{"0":"undefined","1":"false","2":"true"}}},{"name":"as","global":false,"description":"The element or component this component should render as. Can be overwritten by `asChild`.","tags":[{"name":"defaultValue","text":"\"div\""}],"required":false,"type":"AsTag | Component | undefined","schema":{"kind":"enum","type":"AsTag | Component | undefined","schema":{"0":"undefined","1":"\"div\"","2":{"kind":"object","type":"ComponentOptions<any, any, any, ComputedOptions, MethodOptions, any, any, any, string, {}, {}, string, {}, {}, {}, string, ComponentProvideOptions>","schema":{"head":{"name":"head","global":false,"description":"Available exclusively for `defineNuxtComponent`.\nIt will not be executed when using `defineComponent`.","tags":[],"required":false,"type":"((nuxtApp: NuxtApp) => UseHeadInput) | undefined","schema":{"kind":"enum","type":"((nuxtApp: NuxtApp) => UseHeadInput) | undefined","schema":{"0":"undefined","1":{"kind":"event","type":"(nuxtApp: NuxtApp): UseHeadInput","schema":[]}}}}}},"3":{"kind":"event","type":"(props: any, ctx: Omit<{ attrs: Data; slots: Readonly<InternalSlots>; emit: (event: string, ...args: any[]) => void; expose: <Exposed extends Record<string, any> = Record<string, any>>(exposed?: Exposed | undefined) => void; }, \"expose\">): any","schema":[]},"4":{"kind":"object","type":"ComponentPublicInstanceConstructor<any, any, any, any, ComputedOptions, MethodOptions>","schema":{}},"5":"\"button\"","6":"\"a\"","7":"\"form\"","8":"\"h2\"","9":"\"h3\"","10":"\"img\"","11":"\"input\"","12":"\"label\"","13":"\"li\"","14":"\"nav\"","15":"\"ol\"","16":"\"p\"","17":"\"span\"","18":"\"svg\"","19":"\"ul\"","20":"\"template\"","21":{"kind":"object","type":"{} & string","schema":{}}}},"default":"\"button\""}],"slots":[{"name":"default","type":"{}","description":"","schema":{"kind":"object","type":"{}","schema":{}}}],"events":[]}},{"name":"Select","path":"app/components/ui/select/Select.vue","meta":{"props":[{"name":"open","global":false,"description":"The controlled open state of the Select. Can be bind as `v-model:open`.","tags":[],"required":false,"type":"boolean | undefined","schema":{"kind":"enum","type":"boolean | undefined","schema":{"0":"undefined","1":"false","2":"true"}}},{"name":"defaultOpen","global":false,"description":"The open state of the select when it is initially rendered. Use when you do not need to control its open state.","tags":[],"required":false,"type":"boolean | undefined","schema":{"kind":"enum","type":"boolean | undefined","schema":{"0":"undefined","1":"false","2":"true"}}},{"name":"defaultValue","global":false,"description":"The value of the select when initially rendered. Use when you do not need to control the state of the Select","tags":[],"required":false,"type":"string | undefined","schema":{"kind":"enum","type":"string | undefined","schema":{"0":"undefined","1":"string"}}},{"name":"modelValue","global":false,"description":"The controlled value of the Select. Can be bind as `v-model`.","tags":[],"required":false,"type":"string | undefined","schema":{"kind":"enum","type":"string | undefined","schema":{"0":"undefined","1":"string"}}},{"name":"dir","global":false,"description":"The reading direction of the combobox when applicable. <br> If omitted, inherits globally from `ConfigProvider` or assumes LTR (left-to-right) reading mode.","tags":[],"required":false,"type":"Direction | undefined","schema":{"kind":"enum","type":"Direction | undefined","schema":{"0":"undefined","1":"\"ltr\"","2":"\"rtl\""}}},{"name":"name","global":false,"description":"The name of the Select. Submitted with its owning form as part of a name/value pair.","tags":[],"required":false,"type":"string | undefined","schema":{"kind":"enum","type":"string | undefined","schema":{"0":"undefined","1":"string"}}},{"name":"autocomplete","global":false,"description":"Native html input `autocomplete` attribute.","tags":[],"required":false,"type":"string | undefined","schema":{"kind":"enum","type":"string | undefined","schema":{"0":"undefined","1":"string"}}},{"name":"disabled","global":false,"description":"When `true`, prevents the user from interacting with Select","tags":[],"required":false,"type":"boolean | undefined","schema":{"kind":"enum","type":"boolean | undefined","schema":{"0":"undefined","1":"false","2":"true"}}},{"name":"required","global":false,"description":"When `true`, indicates that the user must select a value before the owning form can be submitted.","tags":[],"required":false,"type":"boolean | undefined","schema":{"kind":"enum","type":"boolean | undefined","schema":{"0":"undefined","1":"false","2":"true"}}}],"slots":[{"name":"default","type":"{}","description":"","schema":{"kind":"object","type":"{}","schema":{}}}],"events":[{"name":"update:modelValue","description":"","tags":[],"type":"[value: string]","signature":"(event: \"update:modelValue\", value: string): void","schema":["string"]},{"name":"update:open","description":"","tags":[],"type":"[value: boolean]","signature":"(event: \"update:open\", value: boolean): void","schema":[{"kind":"enum","type":"boolean","schema":["false","true"]}]}]}},{"name":"SelectContent","path":"app/components/ui/select/SelectContent.vue","meta":{"props":[{"name":"forceMount","global":false,"description":"Used to force mounting when more control is needed. Useful when\ncontrolling animation with Vue animation libraries.","tags":[],"required":false,"type":"boolean | undefined","schema":{"kind":"enum","type":"boolean | undefined","schema":{"0":"undefined","1":"false","2":"true"}}},{"name":"position","global":false,"description":"The positioning mode to use\n\n`item-aligned (default)` - behaves similarly to a native MacOS menu by positioning content relative to the active item. <br>\n`popper` - positions content in the same way as our other primitives, for example `Popover` or `DropdownMenu`.","tags":[],"required":false,"type":"\"popper\" | \"item-aligned\" | undefined","schema":{"kind":"enum","type":"\"popper\" | \"item-aligned\" | undefined","schema":{"0":"undefined","1":"\"popper\"","2":"\"item-aligned\""}},"default":"\"popper\""},{"name":"bodyLock","global":false,"description":"The document.body will be lock, and scrolling will be disabled.","tags":[{"name":"defaultValue","text":"true"}],"required":false,"type":"boolean | undefined","schema":{"kind":"enum","type":"boolean | undefined","schema":{"0":"undefined","1":"false","2":"true"}}},{"name":"side","global":false,"description":"The preferred side of the trigger to render against when open.\nWill be reversed when collisions occur and avoidCollisions\nis enabled.","tags":[{"name":"defaultValue","text":"\"top\""}],"required":false,"type":"\"top\" | \"right\" | \"bottom\" | \"left\" | undefined","schema":{"kind":"enum","type":"\"top\" | \"right\" | \"bottom\" | \"left\" | undefined","schema":{"0":"undefined","1":"\"top\"","2":"\"right\"","3":"\"bottom\"","4":"\"left\""}}},{"name":"sideOffset","global":false,"description":"The distance in pixels from the trigger.","tags":[{"name":"defaultValue","text":"0"}],"required":false,"type":"number | undefined","schema":{"kind":"enum","type":"number | undefined","schema":{"0":"undefined","1":"number"}}},{"name":"align","global":false,"description":"The preferred alignment against the trigger.\nMay change when collisions occur.","tags":[{"name":"defaultValue","text":"\"center\""}],"required":false,"type":"\"start\" | \"center\" | \"end\" | undefined","schema":{"kind":"enum","type":"\"start\" | \"center\" | \"end\" | undefined","schema":{"0":"undefined","1":"\"start\"","2":"\"center\"","3":"\"end\""}}},{"name":"alignOffset","global":false,"description":"An offset in pixels from the `start` or `end` alignment options.","tags":[{"name":"defaultValue","text":"0"}],"required":false,"type":"number | undefined","schema":{"kind":"enum","type":"number | undefined","schema":{"0":"undefined","1":"number"}}},{"name":"avoidCollisions","global":false,"description":"When `true`, overrides the side andalign preferences\nto prevent collisions with boundary edges.","tags":[{"name":"defaultValue","text":"true"}],"required":false,"type":"boolean | undefined","schema":{"kind":"enum","type":"boolean | undefined","schema":{"0":"undefined","1":"false","2":"true"}}},{"name":"collisionBoundary","global":false,"description":"The element used as the collision boundary. By default\nthis is the viewport, though you can provide additional\nelement(s) to be included in this check.","tags":[{"name":"defaultValue","text":"[]"}],"required":false,"type":"Element | (Element | null)[] | null | undefined","schema":{"kind":"enum","type":"Element | (Element | null)[] | null | undefined","schema":{"0":"undefined","1":"null","2":{"kind":"object","type":"Element","schema":{}},"3":{"kind":"array","type":"(Element | null)[]","schema":[{"kind":"enum","type":"Element | null","schema":["null","Element"]}]}}}},{"name":"collisionPadding","global":false,"description":"The distance in pixels from the boundary edges where collision\ndetection should occur. Accepts a number (same for all sides),\nor a partial padding object, for example: { top: 20, left: 20 }.","tags":[{"name":"defaultValue","text":"0"}],"required":false,"type":"number | Partial<Record<\"top\" | \"right\" | \"bottom\" | \"left\", number>> | undefined","schema":{"kind":"enum","type":"number | Partial<Record<\"top\" | \"right\" | \"bottom\" | \"left\", number>> | undefined","schema":{"0":"undefined","1":"number","2":"Partial<Record<\"top\" | \"right\" | \"bottom\" | \"left\", number>>"}}},{"name":"arrowPadding","global":false,"description":"The padding between the arrow and the edges of the content.\nIf your content has border-radius, this will prevent it from\noverflowing the corners.","tags":[{"name":"defaultValue","text":"0"}],"required":false,"type":"number | undefined","schema":{"kind":"enum","type":"number | undefined","schema":{"0":"undefined","1":"number"}}},{"name":"sticky","global":false,"description":"The sticky behavior on the align axis. `partial` will keep the\ncontent in the boundary as long as the trigger is at least partially\nin the boundary whilst \"always\" will keep the content in the boundary\nregardless.","tags":[{"name":"defaultValue","text":"\"partial\""}],"required":false,"type":"\"partial\" | \"always\" | undefined","schema":{"kind":"enum","type":"\"partial\" | \"always\" | undefined","schema":{"0":"undefined","1":"\"partial\"","2":"\"always\""}}},{"name":"hideWhenDetached","global":false,"description":"Whether to hide the content when the trigger becomes fully occluded.","tags":[{"name":"defaultValue","text":"false"}],"required":false,"type":"boolean | undefined","schema":{"kind":"enum","type":"boolean | undefined","schema":{"0":"undefined","1":"false","2":"true"}}},{"name":"updatePositionStrategy","global":false,"description":"Strategy to update the position of the floating element on every animation frame.","tags":[{"name":"defaultValue","text":"'optimized'"}],"required":false,"type":"\"always\" | \"optimized\" | undefined","schema":{"kind":"enum","type":"\"always\" | \"optimized\" | undefined","schema":{"0":"undefined","1":"\"always\"","2":"\"optimized\""}}},{"name":"prioritizePosition","global":false,"description":"Force content to be position within the viewport.\n\nMight overlap the reference element, which may not be desired.","tags":[{"name":"defaultValue","text":"false"}],"required":false,"type":"boolean | undefined","schema":{"kind":"enum","type":"boolean | undefined","schema":{"0":"undefined","1":"false","2":"true"}}},{"name":"asChild","global":false,"description":"Change the default rendered element for the one passed as a child, merging their props and behavior.\n\nRead our [Composition](https://www.radix-vue.com/guides/composition.html) guide for more details.","tags":[],"required":false,"type":"boolean | undefined","schema":{"kind":"enum","type":"boolean | undefined","schema":{"0":"undefined","1":"false","2":"true"}}},{"name":"as","global":false,"description":"The element or component this component should render as. Can be overwritten by `asChild`.","tags":[{"name":"defaultValue","text":"\"div\""}],"required":false,"type":"AsTag | Component | undefined","schema":{"kind":"enum","type":"AsTag | Component | undefined","schema":{"0":"undefined","1":"\"div\"","2":{"kind":"object","type":"ComponentOptions<any, any, any, ComputedOptions, MethodOptions, any, any, any, string, {}, {}, string, {}, {}, {}, string, ComponentProvideOptions>","schema":{"head":{"name":"head","global":false,"description":"Available exclusively for `defineNuxtComponent`.\nIt will not be executed when using `defineComponent`.","tags":[],"required":false,"type":"((nuxtApp: NuxtApp) => UseHeadInput) | undefined","schema":{"kind":"enum","type":"((nuxtApp: NuxtApp) => UseHeadInput) | undefined","schema":{"0":"undefined","1":{"kind":"event","type":"(nuxtApp: NuxtApp): UseHeadInput","schema":[]}}}}}},"3":{"kind":"event","type":"(props: any, ctx: Omit<{ attrs: Data; slots: Readonly<InternalSlots>; emit: (event: string, ...args: any[]) => void; expose: <Exposed extends Record<string, any> = Record<string, any>>(exposed?: Exposed | undefined) => void; }, \"expose\">): any","schema":[]},"4":{"kind":"object","type":"ComponentPublicInstanceConstructor<any, any, any, any, ComputedOptions, MethodOptions>","schema":{}},"5":"\"button\"","6":"\"a\"","7":"\"form\"","8":"\"h2\"","9":"\"h3\"","10":"\"img\"","11":"\"input\"","12":"\"label\"","13":"\"li\"","14":"\"nav\"","15":"\"ol\"","16":"\"p\"","17":"\"span\"","18":"\"svg\"","19":"\"ul\"","20":"\"template\"","21":{"kind":"object","type":"{} & string","schema":{}}}}}],"slots":[{"name":"default","type":"{}","description":"","schema":{"kind":"object","type":"{}","schema":{}}}],"events":[{"name":"closeAutoFocus","description":"","tags":[],"type":"[event: Event]","signature":"(event: \"closeAutoFocus\", event: Event): void","schema":[{"kind":"object","type":"Event","schema":{}}]},{"name":"escapeKeyDown","description":"","tags":[],"type":"[event: KeyboardEvent]","signature":"(event: \"escapeKeyDown\", event: KeyboardEvent): void","schema":[{"kind":"object","type":"KeyboardEvent","schema":{}}]},{"name":"pointerDownOutside","description":"","tags":[],"type":"[event: PointerDownOutsideEvent]","signature":"(event: \"pointerDownOutside\", event: PointerDownOutsideEvent): void","schema":["PointerDownOutsideEvent"]}]}},{"name":"SelectGroup","path":"app/components/ui/select/SelectGroup.vue","meta":{"props":[{"name":"asChild","global":false,"description":"Change the default rendered element for the one passed as a child, merging their props and behavior.\n\nRead our [Composition](https://www.radix-vue.com/guides/composition.html) guide for more details.","tags":[],"required":false,"type":"boolean | undefined","schema":{"kind":"enum","type":"boolean | undefined","schema":{"0":"undefined","1":"false","2":"true"}}},{"name":"as","global":false,"description":"The element or component this component should render as. Can be overwritten by `asChild`.","tags":[{"name":"defaultValue","text":"\"div\""}],"required":false,"type":"AsTag | Component | undefined","schema":{"kind":"enum","type":"AsTag | Component | undefined","schema":{"0":"undefined","1":"\"div\"","2":{"kind":"object","type":"ComponentOptions<any, any, any, ComputedOptions, MethodOptions, any, any, any, string, {}, {}, string, {}, {}, {}, string, ComponentProvideOptions>","schema":{"head":{"name":"head","global":false,"description":"Available exclusively for `defineNuxtComponent`.\nIt will not be executed when using `defineComponent`.","tags":[],"required":false,"type":"((nuxtApp: NuxtApp) => UseHeadInput) | undefined","schema":{"kind":"enum","type":"((nuxtApp: NuxtApp) => UseHeadInput) | undefined","schema":{"0":"undefined","1":{"kind":"event","type":"(nuxtApp: NuxtApp): UseHeadInput","schema":[]}}}}}},"3":{"kind":"event","type":"(props: any, ctx: Omit<{ attrs: Data; slots: Readonly<InternalSlots>; emit: (event: string, ...args: any[]) => void; expose: <Exposed extends Record<string, any> = Record<string, any>>(exposed?: Exposed | undefined) => void; }, \"expose\">): any","schema":[]},"4":{"kind":"object","type":"ComponentPublicInstanceConstructor<any, any, any, any, ComputedOptions, MethodOptions>","schema":{}},"5":"\"button\"","6":"\"a\"","7":"\"form\"","8":"\"h2\"","9":"\"h3\"","10":"\"img\"","11":"\"input\"","12":"\"label\"","13":"\"li\"","14":"\"nav\"","15":"\"ol\"","16":"\"p\"","17":"\"span\"","18":"\"svg\"","19":"\"ul\"","20":"\"template\"","21":{"kind":"object","type":"{} & string","schema":{}}}}}],"slots":[{"name":"default","type":"{}","description":"","schema":{"kind":"object","type":"{}","schema":{}}}],"events":[]}},{"name":"SelectItem","path":"app/components/ui/select/SelectItem.vue","meta":{"props":[{"name":"value","global":false,"description":"The value given as data when submitted with a `name`.","tags":[],"required":true,"type":"string","schema":"string"},{"name":"disabled","global":false,"description":"When `true`, prevents the user from interacting with the item.","tags":[],"required":false,"type":"boolean | undefined","schema":{"kind":"enum","type":"boolean | undefined","schema":{"0":"undefined","1":"false","2":"true"}}},{"name":"textValue","global":false,"description":"Optional text used for typeahead purposes.\n\nBy default the typeahead behavior will use the `.textContent` of the `SelectItemText` part.\n\nUse this when the content is complex, or you have non-textual content inside.","tags":[],"required":false,"type":"string | undefined","schema":{"kind":"enum","type":"string | undefined","schema":{"0":"undefined","1":"string"}}},{"name":"asChild","global":false,"description":"Change the default rendered element for the one passed as a child, merging their props and behavior.\n\nRead our [Composition](https://www.radix-vue.com/guides/composition.html) guide for more details.","tags":[],"required":false,"type":"boolean | undefined","schema":{"kind":"enum","type":"boolean | undefined","schema":{"0":"undefined","1":"false","2":"true"}}},{"name":"as","global":false,"description":"The element or component this component should render as. Can be overwritten by `asChild`.","tags":[{"name":"defaultValue","text":"\"div\""}],"required":false,"type":"AsTag | Component | undefined","schema":{"kind":"enum","type":"AsTag | Component | undefined","schema":{"0":"undefined","1":"\"div\"","2":{"kind":"object","type":"ComponentOptions<any, any, any, ComputedOptions, MethodOptions, any, any, any, string, {}, {}, string, {}, {}, {}, string, ComponentProvideOptions>","schema":{"head":{"name":"head","global":false,"description":"Available exclusively for `defineNuxtComponent`.\nIt will not be executed when using `defineComponent`.","tags":[],"required":false,"type":"((nuxtApp: NuxtApp) => UseHeadInput) | undefined","schema":{"kind":"enum","type":"((nuxtApp: NuxtApp) => UseHeadInput) | undefined","schema":{"0":"undefined","1":{"kind":"event","type":"(nuxtApp: NuxtApp): UseHeadInput","schema":[]}}}}}},"3":{"kind":"event","type":"(props: any, ctx: Omit<{ attrs: Data; slots: Readonly<InternalSlots>; emit: (event: string, ...args: any[]) => void; expose: <Exposed extends Record<string, any> = Record<string, any>>(exposed?: Exposed | undefined) => void; }, \"expose\">): any","schema":[]},"4":{"kind":"object","type":"ComponentPublicInstanceConstructor<any, any, any, any, ComputedOptions, MethodOptions>","schema":{}},"5":"\"button\"","6":"\"a\"","7":"\"form\"","8":"\"h2\"","9":"\"h3\"","10":"\"img\"","11":"\"input\"","12":"\"label\"","13":"\"li\"","14":"\"nav\"","15":"\"ol\"","16":"\"p\"","17":"\"span\"","18":"\"svg\"","19":"\"ul\"","20":"\"template\"","21":{"kind":"object","type":"{} & string","schema":{}}}}}],"slots":[{"name":"default","type":"{}","description":"","schema":{"kind":"object","type":"{}","schema":{}}}],"events":[]}},{"name":"SelectItemText","path":"app/components/ui/select/SelectItemText.vue","meta":{"props":[{"name":"asChild","global":false,"description":"Change the default rendered element for the one passed as a child, merging their props and behavior.\n\nRead our [Composition](https://www.radix-vue.com/guides/composition.html) guide for more details.","tags":[],"required":false,"type":"boolean | undefined","schema":{"kind":"enum","type":"boolean | undefined","schema":{"0":"undefined","1":"false","2":"true"}}},{"name":"as","global":false,"description":"The element or component this component should render as. Can be overwritten by `asChild`.","tags":[{"name":"defaultValue","text":"\"div\""}],"required":false,"type":"AsTag | Component | undefined","schema":{"kind":"enum","type":"AsTag | Component | undefined","schema":{"0":"undefined","1":"\"div\"","2":{"kind":"object","type":"ComponentOptions<any, any, any, ComputedOptions, MethodOptions, any, any, any, string, {}, {}, string, {}, {}, {}, string, ComponentProvideOptions>","schema":{"head":{"name":"head","global":false,"description":"Available exclusively for `defineNuxtComponent`.\nIt will not be executed when using `defineComponent`.","tags":[],"required":false,"type":"((nuxtApp: NuxtApp) => UseHeadInput) | undefined","schema":{"kind":"enum","type":"((nuxtApp: NuxtApp) => UseHeadInput) | undefined","schema":{"0":"undefined","1":{"kind":"event","type":"(nuxtApp: NuxtApp): UseHeadInput","schema":[]}}}}}},"3":{"kind":"event","type":"(props: any, ctx: Omit<{ attrs: Data; slots: Readonly<InternalSlots>; emit: (event: string, ...args: any[]) => void; expose: <Exposed extends Record<string, any> = Record<string, any>>(exposed?: Exposed | undefined) => void; }, \"expose\">): any","schema":[]},"4":{"kind":"object","type":"ComponentPublicInstanceConstructor<any, any, any, any, ComputedOptions, MethodOptions>","schema":{}},"5":"\"button\"","6":"\"a\"","7":"\"form\"","8":"\"h2\"","9":"\"h3\"","10":"\"img\"","11":"\"input\"","12":"\"label\"","13":"\"li\"","14":"\"nav\"","15":"\"ol\"","16":"\"p\"","17":"\"span\"","18":"\"svg\"","19":"\"ul\"","20":"\"template\"","21":{"kind":"object","type":"{} & string","schema":{}}}}}],"slots":[{"name":"default","type":"{}","description":"","schema":{"kind":"object","type":"{}","schema":{}}}],"events":[]}},{"name":"SelectLabel","path":"app/components/ui/select/SelectLabel.vue","meta":{"props":[{"name":"for","global":false,"description":"","tags":[],"required":false,"type":"string | undefined","schema":{"kind":"enum","type":"string | undefined","schema":{"0":"undefined","1":"string"}}},{"name":"asChild","global":false,"description":"Change the default rendered element for the one passed as a child, merging their props and behavior.\n\nRead our [Composition](https://www.radix-vue.com/guides/composition.html) guide for more details.","tags":[],"required":false,"type":"boolean | undefined","schema":{"kind":"enum","type":"boolean | undefined","schema":{"0":"undefined","1":"false","2":"true"}}},{"name":"as","global":false,"description":"The element or component this component should render as. Can be overwritten by `asChild`.","tags":[{"name":"defaultValue","text":"\"div\""}],"required":false,"type":"AsTag | Component | undefined","schema":{"kind":"enum","type":"AsTag | Component | undefined","schema":{"0":"undefined","1":"\"div\"","2":{"kind":"object","type":"ComponentOptions<any, any, any, ComputedOptions, MethodOptions, any, any, any, string, {}, {}, string, {}, {}, {}, string, ComponentProvideOptions>","schema":{"head":{"name":"head","global":false,"description":"Available exclusively for `defineNuxtComponent`.\nIt will not be executed when using `defineComponent`.","tags":[],"required":false,"type":"((nuxtApp: NuxtApp) => UseHeadInput) | undefined","schema":{"kind":"enum","type":"((nuxtApp: NuxtApp) => UseHeadInput) | undefined","schema":{"0":"undefined","1":{"kind":"event","type":"(nuxtApp: NuxtApp): UseHeadInput","schema":[]}}}}}},"3":{"kind":"event","type":"(props: any, ctx: Omit<{ attrs: Data; slots: Readonly<InternalSlots>; emit: (event: string, ...args: any[]) => void; expose: <Exposed extends Record<string, any> = Record<string, any>>(exposed?: Exposed | undefined) => void; }, \"expose\">): any","schema":[]},"4":{"kind":"object","type":"ComponentPublicInstanceConstructor<any, any, any, any, ComputedOptions, MethodOptions>","schema":{}},"5":"\"button\"","6":"\"a\"","7":"\"form\"","8":"\"h2\"","9":"\"h3\"","10":"\"img\"","11":"\"input\"","12":"\"label\"","13":"\"li\"","14":"\"nav\"","15":"\"ol\"","16":"\"p\"","17":"\"span\"","18":"\"svg\"","19":"\"ul\"","20":"\"template\"","21":{"kind":"object","type":"{} & string","schema":{}}}}}],"slots":[{"name":"default","type":"{}","description":"","schema":{"kind":"object","type":"{}","schema":{}}}],"events":[]}},{"name":"SelectScrollDownButton","path":"app/components/ui/select/SelectScrollDownButton.vue","meta":{"props":[{"name":"asChild","global":false,"description":"Change the default rendered element for the one passed as a child, merging their props and behavior.\n\nRead our [Composition](https://www.radix-vue.com/guides/composition.html) guide for more details.","tags":[],"required":false,"type":"boolean | undefined","schema":{"kind":"enum","type":"boolean | undefined","schema":{"0":"undefined","1":"false","2":"true"}}},{"name":"as","global":false,"description":"The element or component this component should render as. Can be overwritten by `asChild`.","tags":[{"name":"defaultValue","text":"\"div\""}],"required":false,"type":"AsTag | Component | undefined","schema":{"kind":"enum","type":"AsTag | Component | undefined","schema":{"0":"undefined","1":"\"div\"","2":{"kind":"object","type":"ComponentOptions<any, any, any, ComputedOptions, MethodOptions, any, any, any, string, {}, {}, string, {}, {}, {}, string, ComponentProvideOptions>","schema":{"head":{"name":"head","global":false,"description":"Available exclusively for `defineNuxtComponent`.\nIt will not be executed when using `defineComponent`.","tags":[],"required":false,"type":"((nuxtApp: NuxtApp) => UseHeadInput) | undefined","schema":{"kind":"enum","type":"((nuxtApp: NuxtApp) => UseHeadInput) | undefined","schema":{"0":"undefined","1":{"kind":"event","type":"(nuxtApp: NuxtApp): UseHeadInput","schema":[]}}}}}},"3":{"kind":"event","type":"(props: any, ctx: Omit<{ attrs: Data; slots: Readonly<InternalSlots>; emit: (event: string, ...args: any[]) => void; expose: <Exposed extends Record<string, any> = Record<string, any>>(exposed?: Exposed | undefined) => void; }, \"expose\">): any","schema":[]},"4":{"kind":"object","type":"ComponentPublicInstanceConstructor<any, any, any, any, ComputedOptions, MethodOptions>","schema":{}},"5":"\"button\"","6":"\"a\"","7":"\"form\"","8":"\"h2\"","9":"\"h3\"","10":"\"img\"","11":"\"input\"","12":"\"label\"","13":"\"li\"","14":"\"nav\"","15":"\"ol\"","16":"\"p\"","17":"\"span\"","18":"\"svg\"","19":"\"ul\"","20":"\"template\"","21":{"kind":"object","type":"{} & string","schema":{}}}}}],"slots":[{"name":"default","type":"{}","description":"","schema":{"kind":"object","type":"{}","schema":{}}}],"events":[]}},{"name":"SelectScrollUpButton","path":"app/components/ui/select/SelectScrollUpButton.vue","meta":{"props":[{"name":"asChild","global":false,"description":"Change the default rendered element for the one passed as a child, merging their props and behavior.\n\nRead our [Composition](https://www.radix-vue.com/guides/composition.html) guide for more details.","tags":[],"required":false,"type":"boolean | undefined","schema":{"kind":"enum","type":"boolean | undefined","schema":{"0":"undefined","1":"false","2":"true"}}},{"name":"as","global":false,"description":"The element or component this component should render as. Can be overwritten by `asChild`.","tags":[{"name":"defaultValue","text":"\"div\""}],"required":false,"type":"AsTag | Component | undefined","schema":{"kind":"enum","type":"AsTag | Component | undefined","schema":{"0":"undefined","1":"\"div\"","2":{"kind":"object","type":"ComponentOptions<any, any, any, ComputedOptions, MethodOptions, any, any, any, string, {}, {}, string, {}, {}, {}, string, ComponentProvideOptions>","schema":{"head":{"name":"head","global":false,"description":"Available exclusively for `defineNuxtComponent`.\nIt will not be executed when using `defineComponent`.","tags":[],"required":false,"type":"((nuxtApp: NuxtApp) => UseHeadInput) | undefined","schema":{"kind":"enum","type":"((nuxtApp: NuxtApp) => UseHeadInput) | undefined","schema":{"0":"undefined","1":{"kind":"event","type":"(nuxtApp: NuxtApp): UseHeadInput","schema":[]}}}}}},"3":{"kind":"event","type":"(props: any, ctx: Omit<{ attrs: Data; slots: Readonly<InternalSlots>; emit: (event: string, ...args: any[]) => void; expose: <Exposed extends Record<string, any> = Record<string, any>>(exposed?: Exposed | undefined) => void; }, \"expose\">): any","schema":[]},"4":{"kind":"object","type":"ComponentPublicInstanceConstructor<any, any, any, any, ComputedOptions, MethodOptions>","schema":{}},"5":"\"button\"","6":"\"a\"","7":"\"form\"","8":"\"h2\"","9":"\"h3\"","10":"\"img\"","11":"\"input\"","12":"\"label\"","13":"\"li\"","14":"\"nav\"","15":"\"ol\"","16":"\"p\"","17":"\"span\"","18":"\"svg\"","19":"\"ul\"","20":"\"template\"","21":{"kind":"object","type":"{} & string","schema":{}}}}}],"slots":[{"name":"default","type":"{}","description":"","schema":{"kind":"object","type":"{}","schema":{}}}],"events":[]}},{"name":"SelectSeparator","path":"app/components/ui/select/SelectSeparator.vue","meta":{"props":[{"name":"asChild","global":false,"description":"Change the default rendered element for the one passed as a child, merging their props and behavior.\n\nRead our [Composition](https://www.radix-vue.com/guides/composition.html) guide for more details.","tags":[],"required":false,"type":"boolean | undefined","schema":{"kind":"enum","type":"boolean | undefined","schema":{"0":"undefined","1":"false","2":"true"}}},{"name":"as","global":false,"description":"The element or component this component should render as. Can be overwritten by `asChild`.","tags":[{"name":"defaultValue","text":"\"div\""}],"required":false,"type":"AsTag | Component | undefined","schema":{"kind":"enum","type":"AsTag | Component | undefined","schema":{"0":"undefined","1":"\"div\"","2":{"kind":"object","type":"ComponentOptions<any, any, any, ComputedOptions, MethodOptions, any, any, any, string, {}, {}, string, {}, {}, {}, string, ComponentProvideOptions>","schema":{"head":{"name":"head","global":false,"description":"Available exclusively for `defineNuxtComponent`.\nIt will not be executed when using `defineComponent`.","tags":[],"required":false,"type":"((nuxtApp: NuxtApp) => UseHeadInput) | undefined","schema":{"kind":"enum","type":"((nuxtApp: NuxtApp) => UseHeadInput) | undefined","schema":{"0":"undefined","1":{"kind":"event","type":"(nuxtApp: NuxtApp): UseHeadInput","schema":[]}}}}}},"3":{"kind":"event","type":"(props: any, ctx: Omit<{ attrs: Data; slots: Readonly<InternalSlots>; emit: (event: string, ...args: any[]) => void; expose: <Exposed extends Record<string, any> = Record<string, any>>(exposed?: Exposed | undefined) => void; }, \"expose\">): any","schema":[]},"4":{"kind":"object","type":"ComponentPublicInstanceConstructor<any, any, any, any, ComputedOptions, MethodOptions>","schema":{}},"5":"\"button\"","6":"\"a\"","7":"\"form\"","8":"\"h2\"","9":"\"h3\"","10":"\"img\"","11":"\"input\"","12":"\"label\"","13":"\"li\"","14":"\"nav\"","15":"\"ol\"","16":"\"p\"","17":"\"span\"","18":"\"svg\"","19":"\"ul\"","20":"\"template\"","21":{"kind":"object","type":"{} & string","schema":{}}}}}],"slots":[],"events":[]}},{"name":"SelectTrigger","path":"app/components/ui/select/SelectTrigger.vue","meta":{"props":[{"name":"disabled","global":false,"description":"","tags":[],"required":false,"type":"boolean | undefined","schema":{"kind":"enum","type":"boolean | undefined","schema":{"0":"undefined","1":"false","2":"true"}}},{"name":"asChild","global":false,"description":"Change the default rendered element for the one passed as a child, merging their props and behavior.\n\nRead our [Composition](https://www.radix-vue.com/guides/composition.html) guide for more details.","tags":[],"required":false,"type":"boolean | undefined","schema":{"kind":"enum","type":"boolean | undefined","schema":{"0":"undefined","1":"false","2":"true"}}},{"name":"as","global":false,"description":"The element or component this component should render as. Can be overwritten by `asChild`.","tags":[{"name":"defaultValue","text":"\"div\""}],"required":false,"type":"AsTag | Component | undefined","schema":{"kind":"enum","type":"AsTag | Component | undefined","schema":{"0":"undefined","1":"\"div\"","2":{"kind":"object","type":"ComponentOptions<any, any, any, ComputedOptions, MethodOptions, any, any, any, string, {}, {}, string, {}, {}, {}, string, ComponentProvideOptions>","schema":{"head":{"name":"head","global":false,"description":"Available exclusively for `defineNuxtComponent`.\nIt will not be executed when using `defineComponent`.","tags":[],"required":false,"type":"((nuxtApp: NuxtApp) => UseHeadInput) | undefined","schema":{"kind":"enum","type":"((nuxtApp: NuxtApp) => UseHeadInput) | undefined","schema":{"0":"undefined","1":{"kind":"event","type":"(nuxtApp: NuxtApp): UseHeadInput","schema":[]}}}}}},"3":{"kind":"event","type":"(props: any, ctx: Omit<{ attrs: Data; slots: Readonly<InternalSlots>; emit: (event: string, ...args: any[]) => void; expose: <Exposed extends Record<string, any> = Record<string, any>>(exposed?: Exposed | undefined) => void; }, \"expose\">): any","schema":[]},"4":{"kind":"object","type":"ComponentPublicInstanceConstructor<any, any, any, any, ComputedOptions, MethodOptions>","schema":{}},"5":"\"button\"","6":"\"a\"","7":"\"form\"","8":"\"h2\"","9":"\"h3\"","10":"\"img\"","11":"\"input\"","12":"\"label\"","13":"\"li\"","14":"\"nav\"","15":"\"ol\"","16":"\"p\"","17":"\"span\"","18":"\"svg\"","19":"\"ul\"","20":"\"template\"","21":{"kind":"object","type":"{} & string","schema":{}}}}}],"slots":[{"name":"default","type":"{}","description":"","schema":{"kind":"object","type":"{}","schema":{}}}],"events":[]}},{"name":"SelectValue","path":"app/components/ui/select/SelectValue.vue","meta":{"props":[{"name":"placeholder","global":false,"description":"The content that will be rendered inside the `SelectValue` when no `value` or `defaultValue` is set.","tags":[],"required":false,"type":"string | undefined","schema":{"kind":"enum","type":"string | undefined","schema":{"0":"undefined","1":"string"}}},{"name":"asChild","global":false,"description":"Change the default rendered element for the one passed as a child, merging their props and behavior.\n\nRead our [Composition](https://www.radix-vue.com/guides/composition.html) guide for more details.","tags":[],"required":false,"type":"boolean | undefined","schema":{"kind":"enum","type":"boolean | undefined","schema":{"0":"undefined","1":"false","2":"true"}}},{"name":"as","global":false,"description":"The element or component this component should render as. Can be overwritten by `asChild`.","tags":[{"name":"defaultValue","text":"\"div\""}],"required":false,"type":"AsTag | Component | undefined","schema":{"kind":"enum","type":"AsTag | Component | undefined","schema":{"0":"undefined","1":"\"div\"","2":{"kind":"object","type":"ComponentOptions<any, any, any, ComputedOptions, MethodOptions, any, any, any, string, {}, {}, string, {}, {}, {}, string, ComponentProvideOptions>","schema":{"head":{"name":"head","global":false,"description":"Available exclusively for `defineNuxtComponent`.\nIt will not be executed when using `defineComponent`.","tags":[],"required":false,"type":"((nuxtApp: NuxtApp) => UseHeadInput) | undefined","schema":{"kind":"enum","type":"((nuxtApp: NuxtApp) => UseHeadInput) | undefined","schema":{"0":"undefined","1":{"kind":"event","type":"(nuxtApp: NuxtApp): UseHeadInput","schema":[]}}}}}},"3":{"kind":"event","type":"(props: any, ctx: Omit<{ attrs: Data; slots: Readonly<InternalSlots>; emit: (event: string, ...args: any[]) => void; expose: <Exposed extends Record<string, any> = Record<string, any>>(exposed?: Exposed | undefined) => void; }, \"expose\">): any","schema":[]},"4":{"kind":"object","type":"ComponentPublicInstanceConstructor<any, any, any, any, ComputedOptions, MethodOptions>","schema":{}},"5":"\"button\"","6":"\"a\"","7":"\"form\"","8":"\"h2\"","9":"\"h3\"","10":"\"img\"","11":"\"input\"","12":"\"label\"","13":"\"li\"","14":"\"nav\"","15":"\"ol\"","16":"\"p\"","17":"\"span\"","18":"\"svg\"","19":"\"ul\"","20":"\"template\"","21":{"kind":"object","type":"{} & string","schema":{}}}}}],"slots":[{"name":"default","type":"{}","description":"","schema":{"kind":"object","type":"{}","schema":{}}}],"events":[]}},{"name":"Counter","path":"app/components/Counter.vue","meta":{"props":[],"slots":[],"events":[]}},{"name":"ProseA","path":"node_modules/.pnpm/@nuxtjs+mdc@0.13.1_magicast@0.3.5_rollup@4.31.0/node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseA.vue","meta":{"props":[{"name":"target","global":false,"description":"","tags":[],"required":false,"type":"\"_blank\" | \"_parent\" | \"_self\" | \"_top\" | null | undefined","schema":{"kind":"enum","type":"\"_blank\" | \"_parent\" | \"_self\" | \"_top\" | null | undefined","schema":{"0":"undefined","1":"null","2":"\"_blank\"","3":"\"_parent\"","4":"\"_self\"","5":"\"_top\""}},"default":"undefined"},{"name":"href","global":false,"description":"","tags":[],"required":false,"type":"string | undefined","schema":{"kind":"enum","type":"string | undefined","schema":{"0":"undefined","1":"string"}},"default":"\"\""}],"slots":[{"name":"default","type":"{}","description":"","schema":{"kind":"object","type":"{}","schema":{}}}],"events":[]}},{"name":"ProseBlockquote","path":"node_modules/.pnpm/@nuxtjs+mdc@0.13.1_magicast@0.3.5_rollup@4.31.0/node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseBlockquote.vue","meta":{"props":[],"slots":[{"name":"default","type":"{}","description":"","schema":{"kind":"object","type":"{}","schema":{}}}],"events":[]}},{"name":"ProseCode","path":"node_modules/.pnpm/@nuxtjs+mdc@0.13.1_magicast@0.3.5_rollup@4.31.0/node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseCode.vue","meta":{"props":[],"slots":[{"name":"default","type":"{}","description":"","schema":{"kind":"object","type":"{}","schema":{}}}],"events":[]}},{"name":"ProseEm","path":"node_modules/.pnpm/@nuxtjs+mdc@0.13.1_magicast@0.3.5_rollup@4.31.0/node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseEm.vue","meta":{"props":[],"slots":[{"name":"default","type":"{}","description":"","schema":{"kind":"object","type":"{}","schema":{}}}],"events":[]}},{"name":"ProseH1","path":"node_modules/.pnpm/@nuxtjs+mdc@0.13.1_magicast@0.3.5_rollup@4.31.0/node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseH1.vue","meta":{"props":[{"name":"id","global":false,"description":"","tags":[],"required":false,"type":"string | undefined","schema":{"kind":"enum","type":"string | undefined","schema":{"0":"undefined","1":"string"}}}],"slots":[{"name":"default","type":"{}","description":"","schema":{"kind":"object","type":"{}","schema":{}}}],"events":[]}},{"name":"ProseH2","path":"node_modules/.pnpm/@nuxtjs+mdc@0.13.1_magicast@0.3.5_rollup@4.31.0/node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseH2.vue","meta":{"props":[{"name":"id","global":false,"description":"","tags":[],"required":false,"type":"string | undefined","schema":{"kind":"enum","type":"string | undefined","schema":{"0":"undefined","1":"string"}}}],"slots":[{"name":"default","type":"{}","description":"","schema":{"kind":"object","type":"{}","schema":{}}}],"events":[]}},{"name":"ProseH3","path":"node_modules/.pnpm/@nuxtjs+mdc@0.13.1_magicast@0.3.5_rollup@4.31.0/node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseH3.vue","meta":{"props":[{"name":"id","global":false,"description":"","tags":[],"required":false,"type":"string | undefined","schema":{"kind":"enum","type":"string | undefined","schema":{"0":"undefined","1":"string"}}}],"slots":[{"name":"default","type":"{}","description":"","schema":{"kind":"object","type":"{}","schema":{}}}],"events":[]}},{"name":"ProseH4","path":"node_modules/.pnpm/@nuxtjs+mdc@0.13.1_magicast@0.3.5_rollup@4.31.0/node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseH4.vue","meta":{"props":[{"name":"id","global":false,"description":"","tags":[],"required":false,"type":"string | undefined","schema":{"kind":"enum","type":"string | undefined","schema":{"0":"undefined","1":"string"}}}],"slots":[{"name":"default","type":"{}","description":"","schema":{"kind":"object","type":"{}","schema":{}}}],"events":[]}},{"name":"ProseH5","path":"node_modules/.pnpm/@nuxtjs+mdc@0.13.1_magicast@0.3.5_rollup@4.31.0/node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseH5.vue","meta":{"props":[{"name":"id","global":false,"description":"","tags":[],"required":false,"type":"string | undefined","schema":{"kind":"enum","type":"string | undefined","schema":{"0":"undefined","1":"string"}}}],"slots":[{"name":"default","type":"{}","description":"","schema":{"kind":"object","type":"{}","schema":{}}}],"events":[]}},{"name":"ProseH6","path":"node_modules/.pnpm/@nuxtjs+mdc@0.13.1_magicast@0.3.5_rollup@4.31.0/node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseH6.vue","meta":{"props":[{"name":"id","global":false,"description":"","tags":[],"required":false,"type":"string | undefined","schema":{"kind":"enum","type":"string | undefined","schema":{"0":"undefined","1":"string"}}}],"slots":[{"name":"default","type":"{}","description":"","schema":{"kind":"object","type":"{}","schema":{}}}],"events":[]}},{"name":"ProseHr","path":"node_modules/.pnpm/@nuxtjs+mdc@0.13.1_magicast@0.3.5_rollup@4.31.0/node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseHr.vue","meta":{"props":[],"slots":[],"events":[]}},{"name":"ProseImg","path":"node_modules/.pnpm/@nuxtjs+mdc@0.13.1_magicast@0.3.5_rollup@4.31.0/node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseImg.vue","meta":{"props":[{"name":"src","global":false,"description":"","tags":[],"required":false,"type":"string | undefined","schema":{"kind":"enum","type":"string | undefined","schema":{"0":"undefined","1":"string"}},"default":"\"\""},{"name":"alt","global":false,"description":"","tags":[],"required":false,"type":"string | undefined","schema":{"kind":"enum","type":"string | undefined","schema":{"0":"undefined","1":"string"}},"default":"\"\""},{"name":"width","global":false,"description":"","tags":[],"required":false,"type":"string | number | undefined","schema":{"kind":"enum","type":"string | number | undefined","schema":{"0":"undefined","1":"string","2":"number"}},"default":"undefined"},{"name":"height","global":false,"description":"","tags":[],"required":false,"type":"string | number | undefined","schema":{"kind":"enum","type":"string | number | undefined","schema":{"0":"undefined","1":"string","2":"number"}},"default":"undefined"}],"slots":[],"events":[]}},{"name":"ProseLi","path":"node_modules/.pnpm/@nuxtjs+mdc@0.13.1_magicast@0.3.5_rollup@4.31.0/node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseLi.vue","meta":{"props":[],"slots":[{"name":"default","type":"{}","description":"","schema":{"kind":"object","type":"{}","schema":{}}}],"events":[]}},{"name":"ProseOl","path":"node_modules/.pnpm/@nuxtjs+mdc@0.13.1_magicast@0.3.5_rollup@4.31.0/node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseOl.vue","meta":{"props":[],"slots":[{"name":"default","type":"{}","description":"","schema":{"kind":"object","type":"{}","schema":{}}}],"events":[]}},{"name":"ProseP","path":"node_modules/.pnpm/@nuxtjs+mdc@0.13.1_magicast@0.3.5_rollup@4.31.0/node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseP.vue","meta":{"props":[],"slots":[{"name":"default","type":"{}","description":"","schema":{"kind":"object","type":"{}","schema":{}}}],"events":[]}},{"name":"ProsePre","path":"node_modules/.pnpm/@nuxtjs+mdc@0.13.1_magicast@0.3.5_rollup@4.31.0/node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProsePre.vue","meta":{"props":[{"name":"code","global":false,"description":"","tags":[],"required":false,"type":"string | undefined","schema":{"kind":"enum","type":"string | undefined","schema":{"0":"undefined","1":"string"}},"default":"\"\""},{"name":"meta","global":false,"description":"","tags":[],"required":false,"type":"string | undefined","schema":{"kind":"enum","type":"string | undefined","schema":{"0":"undefined","1":"string"}},"default":"null"},{"name":"language","global":false,"description":"","tags":[],"required":false,"type":"string | undefined","schema":{"kind":"enum","type":"string | undefined","schema":{"0":"undefined","1":"string"}},"default":"null"},{"name":"filename","global":false,"description":"","tags":[],"required":false,"type":"string | undefined","schema":{"kind":"enum","type":"string | undefined","schema":{"0":"undefined","1":"string"}},"default":"null"},{"name":"highlights","global":false,"description":"","tags":[],"required":false,"type":"number[] | undefined","schema":{"kind":"enum","type":"number[] | undefined","schema":{"0":"undefined","1":{"kind":"array","type":"number[]","schema":["number"]}}},"default":"[]"}],"slots":[{"name":"default","type":"{}","description":"","schema":{"kind":"object","type":"{}","schema":{}}}],"events":[]}},{"name":"ProseScript","path":"node_modules/.pnpm/@nuxtjs+mdc@0.13.1_magicast@0.3.5_rollup@4.31.0/node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseScript.vue","meta":{"props":[{"name":"src","global":false,"description":"","tags":[],"required":false,"type":"string | undefined","schema":{"kind":"enum","type":"string | undefined","schema":{"0":"undefined","1":"string"}},"default":"\"\""}],"slots":[],"events":[]}},{"name":"ProseStrong","path":"node_modules/.pnpm/@nuxtjs+mdc@0.13.1_magicast@0.3.5_rollup@4.31.0/node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseStrong.vue","meta":{"props":[],"slots":[{"name":"default","type":"{}","description":"","schema":{"kind":"object","type":"{}","schema":{}}}],"events":[]}},{"name":"ProseTable","path":"node_modules/.pnpm/@nuxtjs+mdc@0.13.1_magicast@0.3.5_rollup@4.31.0/node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseTable.vue","meta":{"props":[],"slots":[{"name":"default","type":"{}","description":"","schema":{"kind":"object","type":"{}","schema":{}}}],"events":[]}},{"name":"ProseTbody","path":"node_modules/.pnpm/@nuxtjs+mdc@0.13.1_magicast@0.3.5_rollup@4.31.0/node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseTbody.vue","meta":{"props":[],"slots":[{"name":"default","type":"{}","description":"","schema":{"kind":"object","type":"{}","schema":{}}}],"events":[]}},{"name":"ProseTd","path":"node_modules/.pnpm/@nuxtjs+mdc@0.13.1_magicast@0.3.5_rollup@4.31.0/node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseTd.vue","meta":{"props":[],"slots":[{"name":"default","type":"{}","description":"","schema":{"kind":"object","type":"{}","schema":{}}}],"events":[]}},{"name":"ProseTh","path":"node_modules/.pnpm/@nuxtjs+mdc@0.13.1_magicast@0.3.5_rollup@4.31.0/node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseTh.vue","meta":{"props":[],"slots":[{"name":"default","type":"{}","description":"","schema":{"kind":"object","type":"{}","schema":{}}}],"events":[]}},{"name":"ProseThead","path":"node_modules/.pnpm/@nuxtjs+mdc@0.13.1_magicast@0.3.5_rollup@4.31.0/node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseThead.vue","meta":{"props":[],"slots":[{"name":"default","type":"{}","description":"","schema":{"kind":"object","type":"{}","schema":{}}}],"events":[]}},{"name":"ProseTr","path":"node_modules/.pnpm/@nuxtjs+mdc@0.13.1_magicast@0.3.5_rollup@4.31.0/node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseTr.vue","meta":{"props":[],"slots":[{"name":"default","type":"{}","description":"","schema":{"kind":"object","type":"{}","schema":{}}}],"events":[]}},{"name":"ProseUl","path":"node_modules/.pnpm/@nuxtjs+mdc@0.13.1_magicast@0.3.5_rollup@4.31.0/node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseUl.vue","meta":{"props":[],"slots":[{"name":"default","type":"{}","description":"","schema":{"kind":"object","type":"{}","schema":{}}}],"events":[]}}]}